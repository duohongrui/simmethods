% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/06-Lun2.R
\name{Lun2_simulation}
\alias{Lun2_simulation}
\title{Simulate Datasets by Lun2}
\usage{
Lun2_simulation(
  parameters,
  other_prior = NULL,
  return_format,
  verbose = FALSE,
  seed
)
}
\arguments{
\item{parameters}{A object generated by \code{\link[splatter:lun2Estimate]{splatter::lun2Estimate()}}}

\item{other_prior}{A list with names of certain parameters. Some methods need
extra parameters to execute the estimation step, so you must input them. In
simulation step, the number of cells, genes, groups, batches, the percent of
DEGs are usually customed, so before simulating a dataset you must point it out.
See \code{Details} below for more information.}

\item{return_format}{A character. Alternatives choices: list, SingleCellExperiment,
Seurat, h5ad. If you select \code{h5ad}, you will get a path where the .h5ad file saves to.}

\item{verbose}{Logical. Whether to return messages or not.}

\item{seed}{A random seed.}
}
\description{
Simulate Datasets by Lun2
}
\details{
In addtion to simulate datasets with default parameters, users want to simulate
other kinds of datasets, e.g. a counts matrix with 2 or more cell groups. In
Lun2, you can set extra parameters to simulate datasets.

The customed parameters you can set are below:
\enumerate{
\item nCells. In Lun2, you can not set nCells directly and should set cell.plates instead. For example, if you want to simulate 1000 cells, you can type \code{other_prior = list(cell.plates = sample(1:3, 1000, replace = TRUE))} and you will get three plates or groups of cells. If you only want to simulate one plate or group, just type \code{other_prior = list(cell.plates = rep(1, 1000))}
\item nGenes. You can directly set \code{other_prior = list(nGenes = 5000)} to simulate 5000 genes.
\item de.prob. You can directly set \code{other_prior = list(de.prob = 0.2)} to simulate DEGs that account for 20 percent of all genes.
\item fc.group. You can directly set \code{other_prior = list(fc.group. = 2)} to specify the foldchange of DEGs.
}

For more customed parameters in Lun2, please check \code{\link[splatter:Lun2Params]{splatter::Lun2Params()}}.
}
\examples{
ref_data <- simmethods::data
group_condition <- simmethods::group_condition
## group_condition must be a numeric vector
other_prior <- list(group.condition = as.numeric(group_condition))
## Estimation
estimate_result <- simmethods::Lun2_estimation(ref_data = ref_data,
                                               other_prior = other_prior,
                                               verbose = TRUE,
                                               seed = 10)


# (1) Simulate 500 cells (Since we can not set nCells directly, so we can set
# cell.plates (a numeric vector)) and 2000 genes
simulate_result <- simmethods::Lun2_simulation(parameters = estimate_result[["estimate_result"]],
                                               other_prior = list(cell.plates = sample(1:2, 500, replace = TRUE),
                                                                  nGenes = 2000),
                                               return_format = "list",
                                               verbose = TRUE,
                                               seed = 111)
count_data <- simulate_result[["simulate_result"]][["count_data"]]
dim(count_data)
## col_data
col_data <- simulate_result[["simulate_result"]][["col_meta"]]
head(col_data)
## row_data
row_data <- simulate_result[["simulate_result"]][["row_meta"]]
head(row_data)


# (2) Simulate two groups (de.prob = 0.2, fc.group = 2)
simulate_result <- simmethods::Lun2_simulation(parameters = estimate_result[["estimate_result"]],
                                               other_prior = list(cell.plates = sample(1:2, 500, replace = TRUE),
                                                                  nGenes = 10000,
                                                                  de.prob = 0.2,
                                                                  fc.group = 2),
                                               return_format = "list",
                                               verbose = TRUE,
                                               seed = 111)
count_data <- simulate_result[["simulate_result"]][["count_data"]]
dim(count_data)
## cell information
col_data <- simulate_result[["simulate_result"]][["col_meta"]]
head(col_data)
table(col_data$plate)
## gene information
row_data <- simulate_result[["simulate_result"]][["row_meta"]]
head(row_data)
### The result of Lun2 contains the factors of different groups and uses can
### calculate the fold change by division. For example, the DEFactors of A gene
### in Ingroup and Outgroup are respectively 2 and 1, and the fold change of A gene
### is 2/1=2 or 1/2=0.5.
fc_ingroup_to_outgroup <- row_data$DEFacIngroup/row_data$DEFacOutgroup
table(fc_ingroup_to_outgroup != 1)[2]/10000 ## de.prob = 0.2
### number of all DEGs
table(row_data$de_gene)[2]/10000 ## de.prob = 0.2
}
\references{
Zappia L, Phipson B, Oshlack A. Splatter: simulation of single-cell RNA sequencing data\link{J}. Genome biology, 2017, 18(1): 1-15. \url{https://doi.org/10.1186/s13059-017-1305-0}

Bioconductor URL: \url{https://bioconductor.org/packages/release/bioc/html/splatter.html}

Github URL: \url{https://github.com/Oshlack/splatter}
}
